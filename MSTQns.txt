Suppose G has an MST T with edge weights 1, 4, 4, and 8. Argue why G cannot have another MST T' with edge weights 2, 3, 6, and 6. 
Draw a graph of four nodes A, B, C, D with unique edge weights such that it has a cycle whose minimum edge is not part of the MST of the graph.
Wells \n There are n cities numbered 1, 2, . . . , n, each of which needs water. To obtain water, a city must either drill its own well or be connected via a sequence of pipes to a city which has its own well. It costs wi for city i to drill its own well and costs pij = pji to construct a pipe between city i and city j. A set of drilling locations and pipe constructions is a viable plan if all cities have access to water after all drilling/piping is complete. (a) Describe your algorithm. (b) Prove that your algorithm is correct. (c) Provide a runtime analysis for your algorithm (in terms of n). Note: Credit for the proof of correctness and the runtime analysis will only be awarded for correct algorithms that run in asymptotically optimal time.
True/False + short justification: MSTs + Max-Flow (24 pts) (3 pts per item) The first six items involve minimum spanning trees (MSTs). Given a weighted undirected connected graph G = (V, E), are the following true or false? If true, provide a brief justification (1-3 sentences); if false, provide a counterexample. In the following, a non-trivial cut would refer to a partition (S, V \ S) of the vertices, where both S and V \ S are non-empty. (a) For any spanning tree T and any non-trivial cut (S, V \ S), T contains at least one edge crossing this cut. (b) For any spanning tree T and any non-trivial cut (S, V \ S), T contains at most one edge crossing this cut. (c) For any non-trivial cut (S, V \ S), suppose e crosses this cut and has strictly smaller weight than every other edge crossing this cut. Then any minimum spanning tree must contain e. (d) For any non-trivial cut (S, V \ S), suppose e crosses this cut and there is another edge with strictly smaller weight than e crossing the cut. Then no minimum spanning tree contains e. (e) For any cycle in the graph, suppose e is in this cycle and has strictly larger weight than every other edge in this cycle. Then no minimum spanning tree contains e. (f) For any two vertices s, t, the shortest path from s to t is contained in every minimum spanning tree. The next couple of items involve Min-Cut-Max-Flow. Again, for each statement, answer whether this state- ment is true or false, and provide a short justification/counterexample. Let G = (V, E) be a network with capacities c and with s-t max-flow with value f . Let (S, V \ S) be a minimal s-t cut in the network, and let e be an edge crossing this cut. (g) If we increase the capacity of e by 1 then we increase the maximal flow of the network by 1. 2 (h) If we decrease the capacity of e by 1 then we decrease the maximal flow of the network by 1. (h) If we decrease the capacity of e by 1 then we decrease the maximal flow of the network by 1.
Trees of Candles (14 points) You are an interior decorator, confronted with a dark living room. To lighten the room up, you have n candles and want to build k trees of candles. First, the candles {1, . . . , k} are already put on the floor, to serve as roots of the k trees. You would like to put the remaining n − k candles {k + 1, . . . , n} on top of them to form k trees {T1, · · · , Tk} of candles, where each Ti is rooted at candle i. You can put an arbitrary number of candles on top of the same candle. The cost to putting candle i on top of candle j is C(i, j). We assume that C(i, j) ≥ 0 and C(i, j) = C(j, i)) for i 6= j. No candle can be reused or put on top of itself. You cannot use the candles {1, . . . , k} anymore, as they have already been fixed to the floor. (a) (6 points) Describe an algorithm to find a solution of minimum cost. (b) (5 points) Prove the correctness of your algorithm. (c) (3 points) Give a runtime analysis of your algorithm in the previous part.